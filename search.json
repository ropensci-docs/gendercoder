[{"path":"https://docs.ropensci.org/gendercoder/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2018 Emily Kothe Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/gendercoder/articles/a01_rationale.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to gendercoder","text":"package CRAN. use package please run following code:","code":"devtools::install_github(\"ropensci/gendercoder\") library(gendercoder)"},{"path":"https://docs.ropensci.org/gendercoder/articles/a01_rationale.html","id":"why-would-we-do-this","dir":"Articles","previous_headings":"","what":"Why would we do this?","title":"Introduction to gendercoder","text":"Researchers collect self-reported demographic data respondents occasionally collect gender using free-text response option. advantage respecting gender diversity respondents without prompting users potentially including misleading responses. However, presents challenge researchers inconsistencies typography spelling create larger set responses required fully capture demographic characteristics sample. example, male participants may provide free-text responses “male”, “man”, “mail”, “mael”. Non-binary participants may provide responses “nonbinary”, “enby”, “non-binary”, “non binary” Manually coding free-text responses often feasible larger datasets. gendercoder() uses dictionaries common misspellings re-code free-text responses consistent set responses. small number responses automatically re-coded gendercoder() can feasibly manually recoded.","code":""},{"path":"https://docs.ropensci.org/gendercoder/articles/a01_rationale.html","id":"motivating-example","dir":"Articles","previous_headings":"","what":"Motivating example","title":"Introduction to gendercoder","text":"gendercoder() includes sample dataset actual free-text responses question “gender?” number studies English-speaking participants. sample dataset includes responses 7756 participants. Naive coding identifies 103 unique responses item. Summary gender categories coding Recoding using gender_coder() function classifies 28 responses pre-defined response categories. manylevels_en dictionary applied head(sample) Summary gender categories use manylevels_en dictionary dataset unclassified responses mix unusual responses apparent response errors (e.g. numbers symbols). genuinely missing (.e. Gender = 40), manually recoded, added custom dictionary. responses classified built-dictionary","code":"library(gendercoder) library(dplyr)  sample %>%    group_by(Gender) %>%    summarise(count = n()) %>%    arrange(-count) %>%    knitr::kable(caption = \"Summary of gender categories before coding\") sample %>%    head(10) %>%    mutate(recoded_gender = recode_gender(gender = Gender, dictionary = manylevels_en)) %>%    knitr::kable(caption = \"The manylevels_en dictionary applied to `head(sample)`\") sample %>%    mutate(recoded_gender = recode_gender(gender = Gender, dictionary = manylevels_en)) %>%    filter(!is.na(recoded_gender)) %>%    group_by(recoded_gender) %>%    summarise(count = n()) %>%    arrange(-count) %>%    knitr::kable(caption = \"Summary of gender categories after use of the *manylevels_en* dictionary\") sample %>%    mutate(recoded_gender = recode_gender(gender = Gender, dictionary = manylevels_en)) %>%    filter(is.na(recoded_gender)) %>%    knitr::kable(caption = \"All responses not classified by the built-in dictionary\")"},{"path":[]},{"path":"https://docs.ropensci.org/gendercoder/articles/a01_rationale.html","id":"dictionary","dir":"Articles","previous_headings":"Options within the function","what":"dictionary","title":"Introduction to gendercoder","text":"package provides two built-dictionaries. use controlled using dictionary argument. first dictionary = manylevels_en provides corrects spelling standardises terms maintaining diversity responses. default dictionary gendercoder() preserves much gender diversity possible. However cases may wish collapse gender smaller set categories using fewlevels_en dictionary (dictionary = fewlevels_en). dictionary contains fewer gender categories, “man”, “woman”, “boy”, “girl”, “sex gender diverse”. “man” category includes participants indicate male trans male (including female male transgender respondents) cis male “woman” category includes participants indicate female trans female (including male female transgender respondents) cis female “sex gender diverse” category includes participants indicate agender androgynous intersex non-binary gender-queer fewlevels_en dictionary applied head(sample) Summary gender categories use fewlevels_en dictionary can also specify custom dictionary replace supplement built-dictionary. custom dictionary list following format. Custom dictionaries can used place built-dictionary can supplement built-dictionary providing vector vectors dictionary argument. lists contain duplicated elements, last version duplicated value used recoding. allows use built-dictionary change coding one responses dictionary. addition Spanish terms allows recoding 11 previously uncoded responses. Summary gender categories use combined dictionaries responses classified combined dictionaries","code":"sample %>%    head(10) %>%    mutate(recoded_gender = recode_gender(gender = Gender, dictionary = fewlevels_en)) %>%    knitr::kable(caption = \"The fewlevels_en dictionary applied to `head(sample)`\") sample %>%    mutate(recoded_gender = recode_gender(gender = Gender, dictionary = fewlevels_en)) %>%    group_by(recoded_gender) %>%    summarise(count = n()) %>%    arrange(-count) %>%    knitr::kable(caption = \"Summary of gender categories after use of the *fewlevels_en* dictionary\") # name of the vector element is the user input value and the vector element is the  # replacement value corresponding to that name as a lower case string. custom_dictionary <- c(   masculino = \"man\",   hombre = \"man\",   mujer = \"woman\",   femenina = \"woman\" )  str(custom_dictionary) ##  Named chr [1:4] \"man\" \"man\" \"woman\" \"woman\" ##  - attr(*, \"names\")= chr [1:4] \"masculino\" \"hombre\" \"mujer\" \"femenina\" sample %>%    mutate(recoded_gender = recode_gender(gender = Gender,                                          dictionary = c(fewlevels_en,                                                         custom_dictionary))) %>%    group_by(recoded_gender) %>%    summarise(count = n()) %>%    arrange(-count) %>%    knitr::kable(caption = \"Summary of gender categories after use of the combined dictionaries\") sample %>%    mutate(recoded_gender = recode_gender(gender = Gender,                                          dictionary = c(fewlevels_en,                                                         custom_dictionary))) %>%    filter(is.na(recoded_gender)) %>%    knitr::kable(caption = \"All responses not classified by the combined dictionaries\")"},{"path":"https://docs.ropensci.org/gendercoder/articles/a01_rationale.html","id":"retain_unmatched","dir":"Articles","previous_headings":"Options within the function","what":"retain_unmatched","title":"Introduction to gendercoder","text":"retain_unmatched argument used determine handling recoding values contained dictionary. default, unmatched values coded NA. retain_unmatched = TRUE fill unmatched responses participant provided response. Summary gender categories use combined dictionary retain_unmatched = TRUE","code":"sample %>%    mutate(recoded_gender = recode_gender(gender = Gender,                                          dictionary = c(fewlevels_en,                                                         custom_dictionary),                                         retain_unmatched = TRUE)) %>%    group_by(recoded_gender) %>%    summarise(count = n()) %>%    arrange(-count) %>%    knitr::kable(caption = \"Summary of gender categories after use of the combined dictionary and `retain_unmatched = TRUE`\") ## Some results not matched from the dictionary have been filled with the original values."},{"path":"https://docs.ropensci.org/gendercoder/articles/a01_rationale.html","id":"a-disclaimer-on-handling-gender-responses","dir":"Articles","previous_headings":"","what":"A disclaimer on handling gender responses","title":"Introduction to gendercoder","text":"package attempts remove typographical errors free text gender data. defaults used specific context time package developed data context may different. offer two built-dictionaries, manylevels_en fewlevels_en. necessarily opinionated gender descriptors collapse categories. However, culturally specific, may suitable data. particular fewlevels_en option makes opinionated choices responses want acknowledge potentially problematic. Specifically, ‘fewlevels_en’ coding intersex responses recoded ‘sex gender diverse’ ‘fewlevels_en’ responses people indicate trans indicate identified gender recoded identified gender (e.g. ‘Male Female’ recoded ‘woman’). wish acknowledge may reflect individuals classify given categories contexts may make systematic errors. manylevels_en coding dictionary attempts avoid issues much possible - however users can provide custom dictionary add overwrite coding decisions feel appropriate. welcome people update built-dictionary desired responses missing. dictionaries, assume typographical features spacing relevant recoding gender response (e.g. assume “genderqueer” “gender queer” equivalent). unlikely true contexts. ‘manylevels_en’ coding separates identify trans female/male cis female/male separate categories assumed people describe male/female cis, assessing trans status recommend two part question see: Bauer, Greta & Braimoh, Jessica & Scheim, Ayden & Dharma, Christoffer. (2017). Transgender-inclusive measures sex/gender population surveys: Mixed-methods evaluation recommendations. PLoS ONE. 12.","code":""},{"path":"https://docs.ropensci.org/gendercoder/articles/a01_rationale.html","id":"contributing-to-this-package","dir":"Articles","previous_headings":"","what":"Contributing to this package","title":"Introduction to gendercoder","text":"package reflection cultural context package contributors. acknowledge understandings gender bound culture time continually changing. , welcome issues pull requests make package inclusive, reflective current understandings gender inclusive languages /suitable broader range cultural contexts. particularly welcome addition non-English dictionaries gender-diverse responses manylevels_en fewlevels_en dictionaries. “Adding dictionary” vignette includes information make changes dictionary either use contributiong gendercoder package.","code":""},{"path":"https://docs.ropensci.org/gendercoder/articles/a01_rationale.html","id":"acknowledgement-of-country","dir":"Articles","previous_headings":"","what":"Acknowledgement of Country","title":"Introduction to gendercoder","text":"acknowledge Wurundjeri people Kulin Nation custodians land package developed pay respects elders past, present future.","code":""},{"path":"https://docs.ropensci.org/gendercoder/articles/a02_add_dictionary.html","id":"outline","dir":"Articles","previous_headings":"","what":"Outline","title":"Adding to the dictionary","text":"gendercoder dictionaries aim comprehensive possible, inevitable new typos variations occur wild data. Moreover, present, dictionaries limited data authors access collected English. , collecting data, point want add create dictionaries (, strongly encourage contributions either pull request via github, raising issue team can help).","code":""},{"path":"https://docs.ropensci.org/gendercoder/articles/a02_add_dictionary.html","id":"adding-to-the-dictionary","dir":"Articles","previous_headings":"","what":"Adding to the dictionary","title":"Adding to the dictionary","text":"Let’s say free-text gender data, English. can create new dictionary creating named vector, names raw, uncoded values, values desired outputs. can used dictionary recode_gender() function. However, can see using just new dictionary leaves number responses uncoded built-dictionaries handle. dictionaries just vectors, can simply concatenate use time. can -line… otherwise can create new dictionary call later, useful might want save augmented dictionary later use contributing package.","code":"library(gendercoder) library(dplyr) df #> # A tibble: 9 × 1 #>   gender #>   <chr>  #> 1 male   #> 2 enby   #> 3 womn   #> 4 mlae   #> 5 mann   #> 6 frau   #> 7 femme  #> 8 homme  #> 9 nin new_dictionary <- c(   mann = \"man\",    frau = \"woman\",    femme = \"woman\",    homme = \"man\",    nin = \"man\")  df %>%    mutate(recoded_gender = recode_gender(gender,                                          dictionary = new_dictionary,                                          retain_unmatched = TRUE)) #> Some results not matched from the dictionary have been filled with the original values. #> # A tibble: 9 × 2 #>   gender recoded_gender #>   <chr>  <chr>          #> 1 male   male           #> 2 enby   enby           #> 3 womn   womn           #> 4 mlae   mlae           #> 5 mann   man            #> 6 frau   woman          #> 7 femme  woman          #> 8 homme  man            #> 9 nin    man df %>%    mutate(recoded_gender = recode_gender(gender,                                          dictionary = c(manylevels_en, new_dictionary),                                          retain_unmatched = TRUE)) #> # A tibble: 9 × 2 #>   gender recoded_gender #>   <chr>  <chr>          #> 1 male   man            #> 2 enby   non-binary     #> 3 womn   woman          #> 4 mlae   man            #> 5 mann   man            #> 6 frau   woman          #> 7 femme  woman          #> 8 homme  man            #> 9 nin    man manylevels_plus <-  c(manylevels_en, new_dictionary)  df %>%    mutate(recoded_gender = recode_gender(gender,                                          dictionary = manylevels_plus,                                          retain_unmatched = TRUE)) #> # A tibble: 9 × 2 #>   gender recoded_gender #>   <chr>  <chr>          #> 1 male   man            #> 2 enby   non-binary     #> 3 womn   woman          #> 4 mlae   man            #> 5 mann   man            #> 6 frau   woman          #> 7 femme  woman          #> 8 homme  man            #> 9 nin    man"},{"path":"https://docs.ropensci.org/gendercoder/articles/a02_add_dictionary.html","id":"making-it-official","dir":"Articles","previous_headings":"","what":"Making it official","title":"Adding to the dictionary","text":"Let’s say happy manylevels_plus dictionary think part manylevels_en dictionary package. need fork gendercoder repo, clone local device, rename vector use usethis::use_data() function overwrite manylevels_en dictionary shown . ’ve pushed changes fork, can make pull request. Please tell us ’re adding know look test .","code":"manylevels_en <-  manylevels_plus usethis::use_data(manylevels_en, overwrite = TRUE)"},{"path":"https://docs.ropensci.org/gendercoder/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yaoxiang Li. Author, maintainer. Jennifer Beaudry. Author. Emily Kothe. Author. Felix Singleton Thorn. Author. Rhydwyn McGuire. Author. Nicholas Tierney. Author. Mathew Ling. Author. Julia Silge. Reviewer.            Julia reviewed package (v. 0.0.0.9000) rOpenSci, see <https://github.com/ropensci/software-review/issues/435> Elin Waring. Reviewer.            Elin reviewed package (v. 0.0.0.9000) rOpenSci, see <https://github.com/ropensci/software-review/issues/435>","code":""},{"path":"https://docs.ropensci.org/gendercoder/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Li Y, Beaudry J, Kothe E, Singleton Thorn F, McGuire R, Tierney N, Ling M (2024). gendercoder: Recodes Sex/Gender Descriptions Standard Set. R package version 0.1.0, https://github.com/ropensci/gendercoder.","code":"@Manual{,   title = {gendercoder: Recodes Sex/Gender Descriptions into a Standard Set},   author = {Yaoxiang Li and Jennifer Beaudry and Emily Kothe and Felix {Singleton Thorn} and Rhydwyn McGuire and Nicholas Tierney and Mathew Ling},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/ropensci/gendercoder}, }"},{"path":"https://docs.ropensci.org/gendercoder/index.html","id":"gendercoder","dir":"","previous_headings":"","what":"Recodes Sex/Gender Descriptions into a Standard Set","title":"Recodes Sex/Gender Descriptions into a Standard Set","text":"goal gendercoder allow simple re-coding free-text gender responses. intended permit representation gender diversity, managing troll-responses workload implications manual coding.","code":""},{"path":"https://docs.ropensci.org/gendercoder/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Recodes Sex/Gender Descriptions into a Standard Set","text":"package CRAN. use package please run following code:","code":"devtools::install_github(\"ropensci/gendercoder\") library(gendercoder)"},{"path":"https://docs.ropensci.org/gendercoder/index.html","id":"basic-use","dir":"","previous_headings":"","what":"Basic use","title":"Recodes Sex/Gender Descriptions into a Standard Set","text":"gendercoder package permits efficient re-coding free-text gender responses within tidyverse pipeline. contains two built-English output dictionaries, default manylevels_en dictionary corrects spelling standardises terms maintaining diversity responses fewlevels_en dictionary contains fewer gender categories, “man”, “woman”, “boy”, “girl”, “sex gender diverse”. core function, gender_recode(), takes 3 arguments, gender vector free-text gender, dictionary preferred dictionary, retain_unmatched logical indicating whether original values carried match. Basic usage demonstrated . package need used part tidyverse pipeline:","code":"library(gendercoder)  tibble(gender = c(\"male\", \"MALE\", \"mle\", \"I am male\", \"femail\", \"female\", \"enby\")) %>%    mutate(manylevels_gender  = recode_gender(gender, dictionary = manylevels_en, retain_unmatched = TRUE),          fewlevels_gender = recode_gender(gender, dictionary = fewlevels_en, retain_unmatched = FALSE)   ) #> Results not matched from the dictionary have been filled with the user inputted values #> # A tibble: 7 × 3 #>   gender    manylevels_gender fewlevels_gender       #>   <chr>     <chr>             <chr>                  #> 1 male      man               man                    #> 2 MALE      man               man                    #> 3 mle       man               man                    #> 4 I am male I am male         <NA>                   #> 5 femail    woman             woman                  #> 6 female    woman             woman                  #> 7 enby      non-binary        sex and gender diverse df <- tibble(gender = c(\"male\", \"MALE\", \"mle\", \"I am male\", \"femail\", \"female\", \"enby\"))   df$manylevels_gender <- recode_gender(df$gender, dictionary = manylevels_en) df #> # A tibble: 7 × 2 #>   gender    manylevels_gender #>   <chr>     <chr>             #> 1 male      man               #> 2 MALE      man               #> 3 mle       man               #> 4 I am male <NA>              #> 5 femail    woman             #> 6 female    woman             #> 7 enby      non-binary"},{"path":"https://docs.ropensci.org/gendercoder/index.html","id":"contributing-to-this-package","dir":"","previous_headings":"","what":"Contributing to this package","title":"Recodes Sex/Gender Descriptions into a Standard Set","text":"package reflection cultural context package contributors. acknowledge understandings gender bound culture time continually changing. , welcome issues pull requests make package inclusive, reflective current understandings gender inclusive languages /suitable broader range cultural contexts. particularly welcome addition non-English dictionaries gender-diverse responses manylevels_en fewlevels_en dictionaries. “Adding dictionary” vignette includes information make changes dictionary either use contributiong gendercoder package.","code":""},{"path":"https://docs.ropensci.org/gendercoder/index.html","id":"citation-information","dir":"","previous_headings":"","what":"Citation Information","title":"Recodes Sex/Gender Descriptions into a Standard Set","text":"Please cite package : Jennifer Beaudry, Emily Kothe, Felix Singleton Thorn, Rhydwyn McGuire, Nicholas Tierney Mathew Ling (2020). gendercoder: Recodes Sex/Gender Descriptions Standard Set. R package version 0.0.0.9000. https://github.com/ropensci/gendercoder","code":""},{"path":"https://docs.ropensci.org/gendercoder/index.html","id":"acknowledgement-of-country","dir":"","previous_headings":"","what":"Acknowledgement of Country","title":"Recodes Sex/Gender Descriptions into a Standard Set","text":"acknowledge Wurundjeri people Kulin Nation custodians land package developed pay respects elders past, present future.","code":""},{"path":"https://docs.ropensci.org/gendercoder/reference/fewlevels_en.html","id":null,"dir":"Reference","previous_headings":"","what":"fewlevels_en — fewlevels_en","title":"fewlevels_en — fewlevels_en","text":"English dictionary recode_gender function fewer levels","code":""},{"path":"https://docs.ropensci.org/gendercoder/reference/gendercoder.html","id":null,"dir":"Reference","previous_headings":"","what":"gendercoder: A Package for Recoding Freetext Gender Data — gendercoder","title":"gendercoder: A Package for Recoding Freetext Gender Data — gendercoder","text":"Provides dictionaries  function recode_gender allow easy automatic coding common variations free text responses question \"gender?\"","code":""},{"path":"https://docs.ropensci.org/gendercoder/reference/manylevels_en.html","id":null,"dir":"Reference","previous_headings":"","what":"manylevels_en — manylevels_en","title":"manylevels_en — manylevels_en","text":"English dictionary recode_gender function many levels","code":""},{"path":"https://docs.ropensci.org/gendercoder/reference/recode_gender.html","id":null,"dir":"Reference","previous_headings":"","what":"recode_gender — recode_gender","title":"recode_gender — recode_gender","text":"recode_gender matches uncleaned gender responses cleaned list using built-custom dictionary.","code":""},{"path":"https://docs.ropensci.org/gendercoder/reference/recode_gender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"recode_gender — recode_gender","text":"","code":"recode_gender(   gender = gender,   dictionary = gendercoder::manylevels_en,   retain_unmatched = FALSE )"},{"path":"https://docs.ropensci.org/gendercoder/reference/recode_gender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"recode_gender — recode_gender","text":"gender character vector gender responses recoding dictionary list contains gender responses replacement values. built-dictionary manylevels_en used default alternative dictionary supplied. retain_unmatched logical indicating gender responses found dictionary filled uncleaned values recoding","code":""},{"path":"https://docs.ropensci.org/gendercoder/reference/recode_gender.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"recode_gender — recode_gender","text":"character vector recoded genders","code":""},{"path":"https://docs.ropensci.org/gendercoder/reference/recode_gender.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"recode_gender — recode_gender","text":"","code":"df <- data.frame(   stringsAsFactors = FALSE,   gender = c(\"male\", \"MALE\", \"mle\", \"I am male\", \"femail\", \"female\", \"enby\"),   age = c(34L, 37L, 77L, 52L, 68L, 67L, 83L) )  dplyr::mutate(df, recoded_gender = recode_gender(gender,   dictionary = manylevels_en,   retain_unmatched = TRUE )) #> Some results not matched from the dictionary have been filled with the original values. #>      gender age recoded_gender #> 1      male  34            man #> 2      MALE  37            man #> 3       mle  77            man #> 4 I am male  52      I am male #> 5    femail  68          woman #> 6    female  67          woman #> 7      enby  83     non-binary"},{"path":"https://docs.ropensci.org/gendercoder/reference/sample.html","id":null,"dir":"Reference","previous_headings":"","what":"sample — sample","title":"sample — sample","text":"sample data.frame free text gender English testing demonstration","code":""},{"path":"https://docs.ropensci.org/gendercoder/news/index.html","id":"gendercoder-01","dir":"Changelog","previous_headings":"","what":"gendercoder 0.1","title":"gendercoder 0.1","text":"Added NEWS.md track package updates Changed dictionary names, now use manylevels_en place broad fewlevels_en place narrow Refactored core functionality use named character vectors place lists.","code":""}]
